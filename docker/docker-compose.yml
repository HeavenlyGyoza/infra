# version: "3.9"
########################### NETWORKS
networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.92.0/24
  t2_proxy:
    name: t2_proxy
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.90.0/24
  socket_proxy:
    name: socket_proxy
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.91.0/24

########################### SECRETS
secrets:
  cf_dns_api_token:
    file: $DOCKERDIR/secrets/cf_dns_api_token
  authelia_jwt_secret:
    file: $DOCKERDIR/secrets/authelia_jwt_secret
  authelia_session_secret:
    file: $DOCKERDIR/secrets/authelia_session_secret
  authelia_storage_encryption_key:
    file: $DOCKERDIR/secrets/authelia_storage_encryption_key


########################### SERVICES

########### CORE
services:
# Traefik 2 - Reverse Proxy
  traefik:
    image: traefik:2.10
    container_name: traefik
    command: # CLI arguments
      - --global.checkNewVersion=true
      - --global.sendAnonymousUsage=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.traefik.address=:8080
      - --entrypoints.websecure.http.tls=true
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.permanent=true
      - --api=true
      - --api.dashboard=true
      # - --api.insecure=true
      #- --serversTransport.insecureSkipVerify=true
      # Allow these IPs to set the X-Forwarded-* headers - Cloudflare IPs: https://www.cloudflare.com/ips/
      - --entrypoints.websecure.forwardedHeaders.trustedIPs=$CLOUDFLARE_IPS,$LOCAL_IPS
      - --log=true
      - --log.filePath=/logs/traefik.log
      - --log.level=DEBUG # (Default: error) DEBUG, INFO, WARN, ERROR, FATAL, PANIC
      - --accessLog=true
      - --accessLog.filePath=/logs/access.log
      - --accessLog.bufferingSize=100 # Configuring a buffer of 100 lines
      - --accessLog.filters.statusCodes=204-299,400-499,500-599
      - --providers.docker=true
      # - --providers.docker.endpoint=unix:///var/run/docker.sock # Disable for Socket Proxy. Enable otherwise.
      - --providers.docker.endpoint=tcp://socket-proxy:2375 # Enable for Socket Proxy. Disable otherwise.
      - --providers.docker.exposedByDefault=false
      - --providers.docker.network=t2_proxy
      - --providers.docker.swarmMode=false
      - --entrypoints.websecure.http.tls.options=tls-opts@file
      # Add dns-cloudflare as default certresolver for all services. Also enables TLS and no need to specify on individual services
      - --entrypoints.websecure.http.tls.certresolver=dns-cloudflare
      - --entrypoints.websecure.http.tls.domains[0].main=$DOMAINNAME_SERVER
      - --entrypoints.websecure.http.tls.domains[0].sans=*.$DOMAINNAME_SERVER
      - --providers.file.directory=/rules # Load dynamic configuration from one or more .toml or .yml files in a directory
      - --providers.file.watch=true # Only works on top level files in the rules folder
      # - --certificatesResolvers.dns-cloudflare.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory # LetsEncrypt Staging Server - uncomment when testing
      - --certificatesResolvers.dns-cloudflare.acme.storage=/acme.json
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.provider=cloudflare
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.resolvers=1.1.1.1:53,1.0.0.1:53
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.delayBeforeCheck=90 # To delay DNS check and reduce LE hitrate
    networks:
      - t2_proxy
      - socket_proxy
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      # - target: 8080 # insecure api wont work
      #   published: 8080
      #   protocol: tcp
      #   mode: host
    volumes:
      - $DOCKERDIR/appdata/traefik2/rules:/rules # file provider directory
      - $DOCKERDIR/appdata/traefik2/acme/acme.json:/acme.json # cert location
      - $DOCKERDIR/logs/server/traefik.log:/logs/traefik.log # logs
    security_opt:
      - no-new-privileges:true
    restart: always
    environment:
      - TZ=$TZ
      - CF_DNS_API_TOKEN=$CLOUDFLARE_DNS_API_TOKEN #/run/secrets/cf_dns_api_token
      - DOMAINNAME_SERVER
    secrets:
      - cf_dns_api_token
    labels:
      - "traefik.enable=true"
      # HTTP Routers
      - "traefik.http.routers.traefik-rtr.entrypoints=websecure"
      - "traefik.http.routers.traefik-rtr.rule=Host(`traefik.$DOMAINNAME_SERVER`)"
      ## Services - API
      - "traefik.http.routers.traefik-rtr.service=api@internal"
      ## Middlewares
      #- "traefik.http.routers.traefik-rtr.middlewares=chain-no-auth@file"
      - "traefik.http.routers.traefik-rtr.middlewares=chain-authelia@file"

# Authelia - SSO & 2FA
  authelia:
    image: authelia/authelia:4.37.5
    container_name: authelia
    networks:
      - t2_proxy
      - socket_proxy
    volumes:
      - $DOCKERDIR/appdata/authelia:/config
    security_opt:
      - no-new-privileges:true
    restart: always
    environment:
      - TZ=$TZ
      - AUTHELIA_JWT_SECRET_FILE=/run/secrets/authelia_jwt_secret
      - AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE=/run/secrets/authelia_storage_encryption_key
      - AUTHELIA_SESSION_SECRET_FILE=/run/secrets/authelia_session_secret
      - DOMAINNAME_SERVER
    secrets:
      - authelia_jwt_secret
      - authelia_storage_encryption_key
      - authelia_session_secret
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.authelia-rtr.entrypoints=websecure"
      - "traefik.http.routers.authelia-rtr.rule=Host(`auth.$DOMAINNAME_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.authelia-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.authelia-rtr.service=authelia-svc"
      - "traefik.http.services.authelia-svc.loadbalancer.server.port=9091"

# Docker Socket Proxy - Security Enhanced Proxy for Docker Socket
  socket-proxy:
    container_name: socket-proxy
    image: tecnativa/docker-socket-proxy
    networks:
      socket_proxy:
        ipv4_address: 192.168.91.254
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    privileged: true
    ports:
      - "127.0.0.1:2375:2375"
    environment:
      - LOG_LEVEL=info # debug,info,notice,warning,err,crit,alert,emerg
      ## Variables match the URL prefix (i.e. AUTH blocks access to /auth/* parts of the API, etc.).
      # 0 to revoke access.
      # 1 to grant access.
      ## Granted by Default
      - EVENTS=1
      - PING=1
      - VERSION=1
      ## Revoked by Default
      # Security critical
      - AUTH=0
      - SECRETS=0
      - POST=0 # Watchtower
      # Not always needed
      - BUILD=0
      - COMMIT=0
      - CONFIGS=0
      - CONTAINERS=1 # Traefik, Portainer, etc.
      - DISTRIBUTION=0
      - EXEC=0
      - IMAGES=1 # Portainer
      - INFO=1 # Portainer
      - NETWORKS=1 # Portainer
      - NODES=0
      - PLUGINS=0
      - SERVICES=1 # Portainer
      - SESSION=0
      - SWARM=0
      - SYSTEM=0
      - TASKS=1 # Portainer
      - VOLUMES=1 # Portainer

# Portainer - WebUI for Docker containers
  portainer:
    container_name: portainer
    image: portainer/portainer-ce
    command: -H tcp://socket-proxy:2375
    networks:
      - t2_proxy
      - socket_proxy
    volumes:
      - $DOCKERDIR/appdata/portainer/data:/data
    restart: always
    security_opt:
      - no-new-privileges:true
    environment:
      - TZ=$TZ
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.portainer-rtr.entrypoints=websecure"
      - "traefik.http.routers.portainer-rtr.rule=Host(`portainer.$DOMAINNAME_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.portainer-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.portainer-rtr.service=portainer-svc"
      - "traefik.http.services.portainer-svc.loadbalancer.server.port=9000"

# Heimdall - Application dashboard
  heimdall:
    image: linuxserver/heimdall
    container_name: heimdall
    networks:
      - t2_proxy
      - socket_proxy
    volumes:
      - $DOCKERDIR/appdata/heimdall:/config
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.heimdall-rtr.entrypoints=websecure"
      - "traefik.http.routers.heimdall-rtr.rule=Host(`$DOMAINNAME_SERVER`,`www.$DOMAINNAME_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.heimdall-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.heimdall-rtr.service=heimdall-svc"
      - "traefik.http.services.heimdall-svc.loadbalancer.server.port=80"

# Dozzle - Real-time Docker Log Viewer
  dozzle:
    image: amir20/dozzle
    container_name: dozzle
    networks:
      - t2_proxy
      - socket_proxy
    # volumes:
    #   - /var/run/docker.sock:/var/run/docker.sock
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    environment:
      DOZZLE_LEVEL: info
      DOZZLE_TAILSIZE: 300
      DOZZLE_FILTER: "status=running"
      DOCKER_HOST: tcp://socket-proxy:2375
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.dozzle-rtr.entrypoints=websecure"
      - "traefik.http.routers.dozzle-rtr.rule=Host(`dozzle.$DOMAINNAME_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.dozzle-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.dozzle-rtr.service=dozzle-svc"
      - "traefik.http.services.dozzle-svc.loadbalancer.server.port=8080"

# Cloudflare-Companion - Automatic CNAME DNS Creation
  cf-companion:
    container_name: cf-companion
    image: tiredofit/traefik-cloudflare-companion
    restart: always
    networks:
      - socket_proxy
    environment:
      - TIMEZONE=$TZ
      - TRAEFIK_VERSION=2
      - CF_TOKEN=$CLOUDFLARE_DNS_API_TOKEN
      - TARGET_DOMAIN=$DOMAINNAME_SERVER
      - DOMAIN1=$DOMAINNAME_SERVER
      - DOMAIN1_ZONE_ID=$CLOUDFLARE_ZONEID 
      - DOMAIN1_PROXIED=TRUE
      - DOCKER_HOST=tcp://socket-proxy:2375

########### MEDIA

# qBittorrent - Torrent Downloader
  qbittorrent:
    container_name: qbittorrent
    image: linuxserver/qbittorrent
    networks:
      - t2_proxy
    volumes:
      - $DOCKERDIR/appdata/qbittorent/config:/config
      - $DATADIR/data/downloads:/data/downloads
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    ports:
      - 6881:6881
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      #- WEBUI_PORT=8080
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.qbittorrent-rtr.entrypoints=websecure"
      - "traefik.http.routers.qbittorrent-rtr.rule=Host(`qbitt.$DOMAINNAME_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.qbittorrent-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.qbittorrent-rtr.service=qbittorrent-svc"
      - "traefik.http.services.qbittorrent-svc.loadbalancer.server.port=8080"

# Jellyfin - Media server
  jellyfin:
    image: linuxserver/jellyfin
    container_name: jellyfin
    networks:
      - t2_proxy
    volumes:
      - $DOCKERDIR/appdata/jellyfin:/config
      - $DATADIR/data/media/movies:/data/movies
      - $DATADIR/data/media/series:/data/series
      - $DATADIR/data/media/anime:/data/anime
      - $DATADIR/temp/appdata/jellyfin/metadata:/config/metadata
    devices:
      - /dev/dri/card0:/dev/dri/card0
      - /dev/dri/renderD128:/dev/dri/renderD128
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.jellyfin-rtr.entrypoints=websecure"
      - "traefik.http.routers.jellyfin-rtr.rule=Host(`jellyfin.$DOMAINNAME_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.jellyfin-rtr.middlewares=chain-no-auth@file"
      ## HTTP Services
      - "traefik.http.routers.jellyfin-rtr.service=jellyfin-svc"
      - "traefik.http.services.jellyfin-svc.loadbalancer.server.port=8096"

# Prowlarr - Torrent proxy
  prowlarr:
    image: linuxserver/prowlarr:develop
    container_name: prowlarr
    networks:
      - t2_proxy
    volumes:
      - $DOCKERDIR/appdata/prowlarr:/config
      - "/etc/localtime:/etc/localtime:ro"
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.prowlarr-rtr.entrypoints=websecure"
      - "traefik.http.routers.prowlarr-rtr.rule=Host(`prowlarr.$DOMAINNAME_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.prowlarr-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.prowlarr-rtr.service=prowlarr-svc"
      - "traefik.http.services.prowlarr-svc.loadbalancer.server.port=9696"

# Radarr - Movie management
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    networks:
      - t2_proxy
    volumes:
      - $DOCKERDIR/appdata/radarr:/config
      - $DATADIR/data:/data
      - "/etc/localtime:/etc/localtime:ro"
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr-rtr.entrypoints=websecure"
      - "traefik.http.routers.radarr-rtr.rule=Host(`radarr.$DOMAINNAME_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.radarr-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.radarr-rtr.service=radarr-svc"
      - "traefik.http.services.radarr-svc.loadbalancer.server.port=7878"

# Sonarr - TV Show management
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    networks:
      - t2_proxy
    volumes:
      - $DOCKERDIR/appdata/sonarr:/config
      - $DATADIR/data:/data
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr-rtr.entrypoints=websecure"
      - "traefik.http.routers.sonarr-rtr.rule=Host(`sonarr.$DOMAINNAME_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.sonarr-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.sonarr-rtr.service=sonarr-svc"
      - "traefik.http.services.sonarr-svc.loadbalancer.server.port=8989"

# Bazarr - Subtitle management
  bazarr:
    image: linuxserver/bazarr:latest
    container_name: bazarr
    networks:
      - t2_proxy
    volumes:
      - $DOCKERDIR/appdata/bazarr:/config
      - $DATADIR/data/media:/data/media
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bazarr-rtr.entrypoints=websecure"
      - "traefik.http.routers.bazarr-rtr.rule=Host(`bazarr.$DOMAINNAME_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.bazarr-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.bazarr-rtr.service=bazarr-svc"
      - "traefik.http.services.bazarr-svc.loadbalancer.server.port=6767"

# JDownloader2 - Download manager
  jdownloader:
    image: jlesage/jdownloader-2
    container_name: jdownloader
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    networks:
      - t2_proxy
    volumes:
      - $DATADIR/data/downloads/jdownloader:/data/downloads #/output?
      - $DOCKERDIR/appdata/jdownloader:/config
    environment:
      USER_ID: $PUID
      GROUP_ID: $PGID
      TZ: $TZ
    labels:
      - "traefik.enable=true"
      # HTTP Routers
      - "traefik.http.routers.jdownloader-rtr.entrypoints=websecure"
      - "traefik.http.routers.jdownloader-rtr.rule=Host(`jdown.$DOMAINNAME_SERVER`)"
      # Middlewares
      - "traefik.http.routers.jdownloader-rtr.middlewares=chain-authelia@file"
      # HTTP Services
      - "traefik.http.routers.jdownloader-rtr.service=jdownloader-svc"
      - "traefik.http.services.jdownloader-svc.loadbalancer.server.port=5800"

# Flaresolverr - Cloudflare DDosS-GUARD protection bypass
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    restart: unless-stopped
    networks:
      - t2_proxy
    environment:
      - TZ=$TZ
      - LOG_LEVEL=info
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}

# Jellyseer - Jellyfin Request Manager
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    restart: unless-stopped
    networks:
      - t2_proxy
    volumes:
      - $DOCKERDIR/appdata/jellyseer:/app/config
    security_opt:
      - no-new-privileges:true
    environment:
    - LOG_LEVEL=info
    - TZ=$TZ
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.jellyseerr-rtr.entrypoints=websecure"
      - "traefik.http.routers.jellyseerr-rtr.rule=Host(`jellyseerr.$DOMAINNAME_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.jellyseerr-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.jellyseerr-rtr.service=jellyseerr-svc"
      - "traefik.http.services.jellyseerr-svc.loadbalancer.server.port=5055"


########### UTILITIES

# Uptime Kuma - Uptime monitoring
  uptime-kuma:
    image: louislam/uptime-kuma
    container_name: uptime-kuma
    networks:
      - t2_proxy
      - socket_proxy
      - default
    volumes:
      - $DOCKERDIR/appdata/uptime-kuma:/app/data
    restart: always
    security_opt:
      - no-new-privileges:true
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.uptime-kuma-rtr.entrypoints=websecure"
      - "traefik.http.routers.uptime-kuma-rtr.rule=Host(`kuma.$DOMAINNAME_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.uptime-kuma-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.uptime-kuma-rtr.service=uptime-kuma-svc"
      - "traefik.http.services.uptime-kuma-svc.loadbalancer.server.port=3001"

# File Browser - Web file browser
  filebrowser:
    image: filebrowser/filebrowser:s6
    container_name: filebrowser
    networks:
      - t2_proxy
    restart: unless-stopped
    volumes:
      - $DOCKERDIR/appdata/filebrowser/filebrowser.db:/database/filebrowser.db
      - $DOCKERDIR/appdata/filebrowser/settings.json:/config/settings.json
      - $USERDIR:/srv/home
      - $DATADIR:/srv/media
    environment:
      - PUID=$PUID
      - PGID=$PGID
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.filebrowser-rtr.entrypoints=websecure"
      - "traefik.http.routers.filebrowser-rtr.rule=Host(`filebrowser.$DOMAINNAME_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.filebrowser-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.filebrowser-rtr.service=filebrowser-svc"
      - "traefik.http.services.filebrowser-svc.loadbalancer.server.port=80"

# Smokeping - Network latency overwatch
  smokeping:
    image: linuxserver/smokeping
    container_name: smokeping
    networks:
      - t2_proxy
    volumes:
      - $DOCKERDIR/appdata/smokeping:/config
      - $DOCKERDIR/appdata/smokeping:/data
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.smokeping-rtr.entrypoints=websecure"
      - "traefik.http.routers.smokeping-rtr.rule=Host(`smokeping.$DOMAINNAME_SERVER`)"
      - "traefik.http.routers.smokeping-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.smokeping-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.smokeping-rtr.service=smokeping-svc"
      - "traefik.http.services.smokeping-svc.loadbalancer.server.port=80"

# Scrutiny - Hard Drive Health Check Monitoring
  scrutiny:
    image: ghcr.io/analogj/scrutiny:master-omnibus
    container_name: scrutiny
    security_opt:
    - no-new-privileges:true
    restart: always
    cap_add:
      - SYS_RAWIO
      - SYS_ADMIN
    networks:
      - t2_proxy
    # ports:
    #   - "8080:8080" # webapp
    #   - "8086:8086" # influxDB admin
    volumes:
      - /run/udev:/run/udev:ro
      - $DOCKERDIR/appdata/scrutiny:/opt/scrutiny/config
      - $DOCKERDIR/appdata/scrutiny/influxdb:/opt/scrutiny/influxdb
    devices:
      - "/dev/nvme0"
      - "/dev/sda"
      - "/dev/sdb"
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.scrutiny-rtr.entrypoints=websecure"
      - "traefik.http.routers.scrutiny-rtr.rule=Host(`scrutiny.$DOMAINNAME_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.scrutiny-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.scrutiny-rtr.service=scrutiny-svc"
      - "traefik.http.services.scrutiny-svc.loadbalancer.server.port=8080"

# Speedtest Tracker - Internet Speed Tracker
  speedtest:
    image: henrywhitaker3/speedtest-tracker
    container_name: speedtest
    security_opt:
    - no-new-privileges:true
    restart: unless-stopped
    networks:
      - t2_proxy
    volumes:
      - $DOCKERDIR/appdata/speedtest:/config
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - OOKLA_EULA_GDPR=true
    logging:
      driver: "json-file"
      options:
          max-file: "10"
          max-size: "200k"
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.speedtest-rtr.entrypoints=websecure"
      - "traefik.http.routers.speedtest-rtr.rule=Host(`speedtest.$DOMAINNAME_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.speedtest-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.speedtest-rtr.service=speedtest-svc"
      - "traefik.http.services.speedtest-svc.loadbalancer.server.port=80"

# Endlessh - SSH Honeypot
  endlessh-go:
    container_name: endlessh
    image: shizunge/endlessh-go:latest
    restart: always
    command:
      - -interval_ms=1000
      - -logtostderr
      - -v=1
      - -enable_prometheus
      - -geoip_supplier=ip-api
    # networks:
    #   - example_network
    ports:
      - 22:2222 # SSH port
      #- 127.0.0.1:2112:2112 # Prometheus metrics port


########### MISC

# Mealie - Recipe manager
  mealie:
    image: ghcr.io/mealie-recipes/mealie
    container_name: mealie
    restart: unless-stopped
    networks:
      - t2_proxy
    deploy:
      resources:
        limits:
          memory: 1000M
    volumes:
      - $DOCKERDIR/appdata/mealie:/app/data/
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.mealie-rtr.entrypoints=websecure"
      - "traefik.http.routers.mealie-rtr.rule=Host(`mealie.$DOMAINNAME_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.mealie-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.mealie-rtr.service=mealie-svc"
      - "traefik.http.services.mealie-svc.loadbalancer.server.port=9000"




########### TESTING

# Homepage - Application Dashboard
  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    networks:
      - t2_proxy
      - socket_proxy
    volumes:
      - $DOCKERDIR/appdata/homepage:/app/config
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID
      HOMEPAGE_VAR_DOMAINNAME_SERVER: $DOMAINNAME_SERVER
      HOMEPAGE_VAR_JELLYFIN_API_KEY: $JELLYFIN_API_KEY
      HOMEPAGE_VAR_JELLYSEERR_API_KEY: $JELLYSEERR_API_KEY
      HOMEPAGE_VAR_RADARR_API_KEY: $RADARR_API_KEY
      HOMEPAGE_VAR_SONARR_API_KEY: $SONARR_API_KEY
      HOMEPAGE_VAR_PROWLARR_API_KEY: $PROWLARR_API_KEY
      HOMEPAGE_VAR_BAZARR_API_KEY: $BAZARR_API_KEY
      HOMEPAGE_VAR_PORTAINER_API_KEY: $PORTAINER_API_KEY
      HOMEPAGE_VAR_QBITT_USERNAME: $QBITT_USERNAME
      HOMEPAGE_VAR_QBITT_PW: $QBITT_PW
      HOMEPAGE_VAR_MEALIE_API_KEY: $MEALIE_API_KEY
    labels:
      - "traefik.enable=true"
      # HTTP Routers
      - "traefik.http.routers.homepage-rtr.entrypoints=websecure"
      - "traefik.http.routers.homepage-rtr.rule=Host(`homepage.$DOMAINNAME_SERVER`)"
      #- "traefik.http.routers.homepage-rtr.rule=Host(`$DOMAINNAME_SERVER`,`www.$DOMAINNAME_SERVER`)"
      # Middlewares
      - "traefik.http.routers.homepage-rtr.middlewares=chain-authelia@file"
      # HTTP Services
      - "traefik.http.routers.homepage-rtr.service=homepage-svc"
      - "traefik.http.services.homepage-svc.loadbalancer.server.port=3000"

# Guacamole - Clientless remote desktop
  guacamole:
    image: oznu/guacamole
    container_name: guacamole
    networks:
      - t2_proxy
    volumes:
      - $DOCKERDIR/appdata/guacamole:/config
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.guacamole-rtr.entrypoints=websecure"
      - "traefik.http.routers.guacamole-rtr.rule=Host(`guacamole.$DOMAINNAME_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.guacamole-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.guacamole-rtr.service=guacamole-svc"
      - "traefik.http.services.guacamole-svc.loadbalancer.server.port=8080"

# Guacd - Guacamole Server Daemon
  guacd:
    image: guacamole/guacd
    container_name: guacd
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped

# Watchtower - Docker Container Auto-Updater
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    networks:
      - socket_proxy

# Minecraft - Minecraft Modded Server
  minecraft:
    image: itzg/minecraft-server
    container_name: minecraft
    restart: always
    ports:
      - 25565:25565
    environment:
      UID: $PUID
      GID: $PGID
      EULA: "true"
      TYPE: "FORGE"
      FORGE_VERSION: "47.2.0"
      VERSION: "1.20.1"
      DIFFICULTY: "hard"
      ALLOW_FLIGHT: "true"
      VIEW_DISTANCE: "12"
      INIT_MEMORY: "1G"
      MAX_MEMORY: "12G"
      USE_AIKAR_FLAGS: "true"
      MAX_BUILD_HEIGHT: "320"
      ONLINE_MODE: "false"
      SERVER_NAME: "Corocraft"
      SPAWN_PROTECTION: "16"
      MODE: "survival"
      ENABLE_WHITELIST: "true"
      SNOOPER_ENABLED: "false"
      REMOVE_OLD_MODS: "true"
      MODS_FILE: "/extras/mods.txt"
      DATAPACKS_FILE: "/extras/datapacks.txt"
    volumes:
      - $MINECRAFTDIR/forge/data:/data
      - $MINECRAFTDIR/forge/data/mods:/mods
      - $MINECRAFTDIR/forge/data/server_config/mods.txt:/extras/mods.txt
      - $MINECRAFTDIR/forge/data/server_config/datapacks.txt:/extras/datapacks.txt
      
# OpenSpeedTest - Self-hosted Speed Testing
  openspeedtest:
    image: openspeedtest/latest
    container_name: openspeedtest

# MKVToolNix - MKV File Editor
  mkvtoolnix:
    image: jlesage/mkvtoolnix
    container_name: mkvtoolnix
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    volumes:
      - $DOCKERDIR/appdata/mkvtoolnix:/config
      - $DATADIR/data/downloads:/storage:rw
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.mkvtoolnix-rtr.entrypoints=websecure"
      - "traefik.http.routers.mkvtoolnix-rtr.rule=Host(`mkvtoolnix.$DOMAINNAME_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.mkvtoolnix-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.mkvtoolnix-rtr.service=mkvtoolnix-svc"
      - "traefik.http.services.mkvtoolnix-svc.loadbalancer.server.port=5800"

# MKVCleaver - MKV File Extractor
  mkvcleaver:
    image: jlesage/mkvcleaver
    container_name: mkvcleaver
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    volumes:
      - $DOCKERDIR/appdata/mkvcleaver:/config
      - $DATADIR/data/downloads:/storage:rw
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.mkvcleaver-rtr.entrypoints=websecure"
      - "traefik.http.routers.mkvcleaver-rtr.rule=Host(`mkvcleaver.$DOMAINNAME_SERVER`)"
      ## Middlewares
      - "traefik.http.routers.mkvcleaver-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.mkvcleaver-rtr.service=mkvcleaver-svc"
      - "traefik.http.services.mkvcleaver-svc.loadbalancer.server.port=5800"

# Gluetun - VPN
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun